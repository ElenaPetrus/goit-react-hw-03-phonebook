{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/FIlter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/FIlter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","App.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","htmlFor","className","s","formInput","id","type","pattern","title","required","onChange","Component","Filter","inputId","label","input","ContactList","contacts","onDeleteContact","contactList","map","item","text","onClick","initialState","App","filter","componentDidUpdate","prevProps","prevState","localStorage","setItem","JSON","stringify","componentDidMount","newContacts","parse","getItem","addContact","contact","find","toLowerCase","alert","deleteContact","contactId","changeFilter","getVisibleContacts","normalizedFilter","includes","totalContactCount","length","visibleContacts","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.370247f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"ContactForm_formInput__1eFAi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__16-Hx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__2AqhW\",\"text\":\"ContactList_text__3dxPk\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\nimport shortid from \"shortid\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n  // handleNameChange = event => {\n  //   // console.log(event.currentTarget.value);\n  //   this.setState({ name: event.currentTarget.value });\n  // };\n  // handleNumberChange = event => {\n  //   // console.log(event.currentTarget.value);\n  //   this.setState({ number: event.currentTarget.value });\n  // };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>\n          Name{\" \"}\n          <input\n            className={s.formInput}\n            id={this.nameInputId}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label htmlFor={this.numberInputId}>\n          Number{\" \"}\n          <input\n            className={s.formInput}\n            id={this.numberInputId}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport { ContactForm };\n","import PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\nimport s from \"./Filter.module.css\";\n\nfunction Filter({ value, onChange }) {\n  const inputId = shortid.generate();\n  //  replace(/ /g, '')\n  return (\n    <label className={s.label} htmlFor={inputId}>\n      Find contact by name/number\n      <input\n        className={s.input}\n        id={inputId}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport { Filter };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.contactList}>\n    {contacts.map(({ name, number, id }) => (\n      <li key={id} className={s.item}>\n        <span className={s.text}>{name}</span>\n        <span className={s.text}>{number}</span>\n        <button type=\"button\" onClick={() => onDeleteContact(id)}>\n          Удалить\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport { ContactList };\n","import React, { Component } from 'react';\nimport { ContactForm } from './components/ContactForm/ContactForm';\nimport { Filter } from './components/FIlter/Filter';\nimport { ContactList } from './components/ContactList/ContactList';\nimport s from './App.module.css';\nimport shortid from 'shortid';\n\nconst initialState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidUpdate = (prevProps, prevState) => {\n    // console.log(prevState);\n    // console.log(this.state);\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  };\n\n  // operator объединение с null https://learn.javascript.ru/nullish-coalescing-operator\n  componentDidMount = () => {\n    const newContacts = JSON.parse(localStorage.getItem('contacts'));\n    this.setState({ contacts: newContacts ?? initialState });\n  };\n\n  //   componentDidMount =()=>{\n  //    const contacts =JSON.parse( localStorage.getItem('Contacts'))\n  //  console.log(contacts);\n  //  if (contacts!==null){\n  //    this.setState({\n  //      contacts\n  //    })\n  //  }\n  //}\n\n  // // не очень хороший вариант\n  //   componentDidUpdate() {\n  //     if (\n  //       this.getVisibleContacts().length === 0 &&\n  //       this.state.contacts.length > 0\n  //     )\n  //       alert(\"Соntact is not on the ContactList\");\n  //   }\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.state.contacts.find(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase() ||\n        contact.number === number,\n    )\n      ? alert(`${contact.name} witn ${contact.number} is already in Contacts`)\n      : this.setState(prevState => ({\n          contacts: [contact, ...prevState.contacts],\n        }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  //\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(normalizedFilter) ||\n        contact.number.includes(filter),\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const totalContactCount = contacts.length;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className={s.container}>\n        <h1 className={s.title}>Phonebook</h1>\n        <span> Total contacts: {totalContactCount}</span>\n\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2 className={s.title}>Contacts</h2>\n\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3FWo7\",\"title\":\"App_title__2vtWv\"};"],"sourceRoot":""}